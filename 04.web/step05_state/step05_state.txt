[step05_state]
1. client의 지속적인 상태 유지를 위한 개발 기술
	- 로그인 ~ 로그아웃 까지의 개발 기술

2. http 프로토콜 기본 특징
	- 무상태 유지 및 비연결 지향
	- 한 번 요청에서 처리한 데이터는 계속 유지되지 않는다!
	
3. 개발 기술
	1. client 시스템에 데이터 저장
		1. 파일로 저장
		2. 브라우저 메모리에 저장
			: 공용 pc인 경우 사용 종료 후 쿠키 정보 삭제
		3. 단점 : client가 쿠키 정보 삭제시 해결 방법 없음
		4. 쿠키
			- javax.servlet.http.Cookie
			- setMaxAge()/getName()/getValue()
			
			- HttpServletResponse의 addCookie()
		5. 개발단계
			1단계 - client 접속 승인
			2단계 - 접속한 client가 상태 유지를 위한 시도
			3단계 - 고유한 정보로 Cookie 객체 생성
					: 맵구조 - key와 value가 매핑된 구조
			4단계 - Cookie 객체의 정보를 client 시스템에 저장(응답)
			5단계 - 이동된 web page에서 client 시스템에 있는 Cookie 정보 획득, 사용
			6단계 - 상태유지 비활성화시 client 시스템의 쿠키정보 삭제
		6. 저장하는 데이터 타입?
			- 길이는 제한이 없음! - 키 타입 : 스트링
		
	2. server 시스템에 데이터 저장
		1. 세션 메모리에 상태 유지 데이터 저장
		2. 저장하는 데이터 타입 제한 없음
		3. 설정 방식
			- web.xml에 설정
			- 메소드로 불필요한 시점에 자동 삭제
		4. 개발 방법
			1. 생성 및 제공
				javax.servlet.http.HttpSession 생성 : getSession()
					- container에게 생성 요청해서 없을 경우 새로 생성
					- 이미 존재할 경우 해당 client만의 HttpSession 객체 제공 받음
			
			2. 세션 객체에 상태 유지를 위한 데이터 저장
				- setAttribute(key, value)
				
			3. 이동된 web page에선 세션객체 획득(getSession()) 후 getAttribute()로 데이터 활용
			
			4. 세션 기능 무효화
				invalidate()