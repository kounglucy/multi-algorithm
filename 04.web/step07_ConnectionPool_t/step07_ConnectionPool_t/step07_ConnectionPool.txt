[학습]
* https://docs.oracle.com/cd/E13222_01/wls/docs81/ConsoleHelp/jdbc_connection_pools.html
* https://commons.apache.org/proper/commons-dbcp/download_dbcp.cgi
* https://commons.apache.org/proper/commons-pool/download_pool.cgi
1. DB 시스템의 동시 접속자 수를 강제적으로 제한 하는 기술
	- Connection Pooling[CP]
	
2. 적용 방법
	1. 각 서버별 매뉴얼에 맞게 설정
		http://apache.org
	2. 시스템 사양에 적합한 Connection 수 조절
	3. 자바 소스 상에서의 코드는 표준화 되어 있음
	4. 주의사항
		- Connection은 재사용 개념
		- 사용 직후에는 자원 반환 코드 필수(Connection 잔존 서버 메모리에 반환)
			: close()

3. 원리
	1. 정해진 Connection 수에 한해서만 생성 및 유지
	2. 서버 시작시에 이미 몇개를 생성해서 대기해 놓을 수도 있음
	
4. 적용 기술
	1. 벤더사가 제시한 매뉴얼에 맞게 설정파일 작성
		1. DB의 종류 - driver 정보
		2. DB의 접속 정보 - url, id, pw
		3. 동시 접속자 - 20
		...
	
	* JNDI(Java Naming and Directory Interface)
		- 패키지.클래스의 이름으로 객체를 획득하는 API
	
	
5. context.xml <-- 위치 : META-INF하단 위치
	<Resource 
		name="jdbc/oracle"  						- 설정 정보를 구분하기 위한 고유한 자원의 별칭
		auth="Container"		 					- 이 자원의 관리 권한은 container 즉 서버가 관리 함을 의미
		type="javax.sql.DataSource"   				- 자바 소스와 서버 설정 정보의 중간 매개체 객체 타입
		driverClassName="oracle.jdbc.OracleDriver"  - Oracle DB driver 지정
		url="jdbc:oracle:thin:@localhost:1521:xe"   - 접속을 위한 url 설정
		username=""   								- ID
		password="" 								- PW
		maxTotal="20" 								- 동시 접속 max Connection 개수
		maxIdle="10" 								- 10개의 객체는 늘 대기 개수
		maxWaitMillis="-1" />						- 20개 초과한 대기 시간, -1 따라서 무한 대기의미
		
		